package org.automation.poc;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;


public class propertyLoader {

	private static Properties prop;
	
	static
	{
		System.out.println("in static block");
		FileInputStream is = null;
		try 
		{
			
			
			 // Getting ClassLoader obj
			   ClassLoader classLoader = this.getClass().getClassLoader();
			   // Getting resource(File) from class loader
			   File configFile=new File(classLoader.getResource(input.xml).getFile());
			  
			   inputStream = new FileInputStream(configFile);
			   BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream));
			   String line;
			   while ((line = reader.readLine()) != null) {
			   System.out.println(line);
			   }
			 
			   reader.close();
			 
			
			
			
			prop = new Properties();
			String resourceName = "cassandra.properties"; // could also be a constant
			ClassLoader loader = Thread.currentThread().getContextClassLoader();
			//Properties props = new Properties();
			InputStream resourceStream = loader.getResourceAsStream(resourceName);
			prop.load(resourceStream);
		} 
		catch (FileNotFoundException e) 
		{
			e.printStackTrace();
		} 
		catch (IOException e) 
		{
			e.printStackTrace();
		}
	}
	
	public static String getPropertyValue(String key)
	{
        return prop.getProperty(key);
    }
	
	public static String [] getArrayProprtyValue(String key)
	{
		return prop.getProperty(key).split(",");
	}
	
	
	public static int getIntPropertyValue(String key)
	{
        return Integer.valueOf(prop.getProperty(key));
    }

}
